spring:
  application:
    name: product-ms
  datasource:
    url: jdbc:postgresql://localhost:5432/productsDB-ms
    username: postgres
    password: senh@BD
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true
    properties:
      hibernate:
        "globally_quoted_identifiers": "true"
      hibernate.format_sql: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

server:
  port: 0000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value} }
    prefer-ip-address: true

info:
  app:
    name: "product"
    description: "OrderFlow Inventory Application"
    version: "1.0.0"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

#resilience4j.ratelimiter:
#  configs:
#    default:
#      timeoutDuration: 1000
#      limitRefreshPeriod: 5000
#      limitForPeriod: 1

logging:
  level:
    com:
      rtarcisio:
        inventaryms: debug
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
